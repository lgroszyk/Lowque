// <auto-generated />
using System;
using Lowque.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Lowque.DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20211226180452_DataModel")]
    partial class DataModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Lowque.DataAccess.Entities.ApplicationDefinition", b =>
                {
                    b.Property<int>("ApplicationDefinitionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DataAccessModuleDefinition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentityModuleDefinition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsTemplate")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Template")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ApplicationDefinitionId");

                    b.ToTable("ApplicationDefinitions");

                    b.HasData(
                        new
                        {
                            ApplicationDefinitionId = 1,
                            CreatedAt = new DateTime(2021, 10, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DataAccessModuleDefinition = "[{\"Name\":\"Process\",\"Properties\":[{\"Name\":\"ProcessId\",\"Type\":\"IntegralNumber\",\"Key\":true,\"Required\":true,\"Navigation\":false,\"MaxLength\":null,\"List\":false},{\"Name\":\"ProcessStatus\",\"Type\":\"TextPhrase\",\"Key\":false,\"Required\":true,\"Navigation\":false,\"MaxLength\":null,\"List\":false},{\"Name\":\"CreationDate\",\"Type\":\"DateAndTime\",\"Key\":false,\"Required\":true,\"Navigation\":false,\"MaxLength\":null,\"List\":false},{\"Name\":\"LastModificationDate\",\"Type\":\"DateAndTime\",\"Key\":false,\"Required\":true,\"Navigation\":false,\"MaxLength\":null,\"List\":false},{\"Name\":\"CandidateFirstName\",\"Type\":\"TextPhrase\",\"Key\":false,\"Required\":true,\"Navigation\":false,\"MaxLength\":50,\"List\":false},{\"Name\":\"CandidateLastName\",\"Type\":\"TextPhrase\",\"Key\":false,\"Required\":true,\"Navigation\":false,\"MaxLength\":50,\"List\":false},{\"Name\":\"CandidateFullName\",\"Type\":\"TextPhrase\",\"Key\":false,\"Required\":true,\"Navigation\":false,\"MaxLength\":101,\"List\":false},{\"Name\":\"CandidateEmail\",\"Type\":\"TextPhrase\",\"Key\":false,\"Required\":true,\"Navigation\":false,\"MaxLength\":100,\"List\":false},{\"Name\":\"CandidatePhoneNumber\",\"Type\":\"TextPhrase\",\"Key\":false,\"Required\":true,\"Navigation\":false,\"MaxLength\":20,\"List\":false},{\"Name\":\"CandidateAge\",\"Type\":\"IntegralNumber\",\"Key\":false,\"Required\":true,\"Navigation\":false,\"MaxLength\":null,\"List\":false},{\"Name\":\"UserId\",\"Type\":\"IntegralNumber\",\"Key\":false,\"Required\":false,\"Navigation\":false,\"MaxLength\":null,\"List\":false},{\"Name\":\"PreferredEmploymentDimension\",\"Type\":\"TextPhrase\",\"Key\":false,\"Required\":false,\"Navigation\":false,\"MaxLength\":50,\"List\":false},{\"Name\":\"PreferredTypeOfContract\",\"Type\":\"TextPhrase\",\"Key\":false,\"Required\":false,\"Navigation\":false,\"MaxLength\":50,\"List\":false},{\"Name\":\"PreferredSalary\",\"Type\":\"TextPhrase\",\"Key\":false,\"Required\":false,\"Navigation\":false,\"MaxLength\":50,\"List\":false},{\"Name\":\"PreferredStartDate\",\"Type\":\"TextPhrase\",\"Key\":false,\"Required\":false,\"Navigation\":false,\"MaxLength\":100,\"List\":false},{\"Name\":\"OfferedEmploymentDimension\",\"Type\":\"TextPhrase\",\"Key\":false,\"Required\":false,\"Navigation\":false,\"MaxLength\":50,\"List\":false},{\"Name\":\"OfferedTypeOfContract\",\"Type\":\"TextPhrase\",\"Key\":false,\"Required\":false,\"Navigation\":false,\"MaxLength\":50,\"List\":false},{\"Name\":\"OfferedSalary\",\"Type\":\"TextPhrase\",\"Key\":false,\"Required\":false,\"Navigation\":false,\"MaxLength\":50,\"List\":false},{\"Name\":\"OfferedStartDate\",\"Type\":\"TextPhrase\",\"Key\":false,\"Required\":false,\"Navigation\":false,\"MaxLength\":100,\"List\":false},{\"Name\":\"User\",\"Type\":\"User\",\"Key\":false,\"Required\":false,\"Navigation\":true,\"MaxLength\":null,\"List\":false},{\"Name\":\"Documents\",\"Type\":\"Document\",\"Key\":false,\"Required\":false,\"Navigation\":true,\"MaxLength\":null,\"List\":true},{\"Name\":\"Meetings\",\"Type\":\"Meeting\",\"Key\":false,\"Required\":false,\"Navigation\":true,\"MaxLength\":null,\"List\":true},{\"Name\":\"Comments\",\"Type\":\"Comment\",\"Key\":false,\"Required\":false,\"Navigation\":true,\"MaxLength\":null,\"List\":true}]},{\"Name\":\"Meeting\",\"Properties\":[{\"Name\":\"MeetingId\",\"Type\":\"IntegralNumber\",\"Key\":true,\"Required\":true,\"Navigation\":false,\"MaxLength\":null,\"List\":false},{\"Name\":\"MeetingTime\",\"Type\":\"DateAndTime\",\"Key\":false,\"Required\":true,\"Navigation\":false,\"MaxLength\":null,\"List\":false},{\"Name\":\"ProcessId\",\"Type\":\"IntegralNumber\",\"Key\":false,\"Required\":true,\"Navigation\":false,\"MaxLength\":null,\"List\":false},{\"Name\":\"IsOnline\",\"Type\":\"Binary\",\"Key\":false,\"Required\":true,\"Navigation\":false,\"MaxLength\":null,\"List\":false},{\"Name\":\"OfficeId\",\"Type\":\"IntegralNumber\",\"Key\":false,\"Required\":false,\"Navigation\":false,\"MaxLength\":null,\"List\":false},{\"Name\":\"Link\",\"Type\":\"TextPhrase\",\"Key\":false,\"Required\":false,\"Navigation\":false,\"MaxLength\":500,\"List\":false},{\"Name\":\"DidTakePlace\",\"Type\":\"Binary\",\"Key\":false,\"Required\":true,\"Navigation\":false,\"MaxLength\":null,\"List\":false},{\"Name\":\"Process\",\"Type\":\"Process\",\"Key\":false,\"Required\":false,\"Navigation\":true,\"MaxLength\":null,\"List\":false},{\"Name\":\"Office\",\"Type\":\"Office\",\"Key\":false,\"Required\":false,\"Navigation\":true,\"MaxLength\":null,\"List\":false}]},{\"Name\":\"Document\",\"Properties\":[{\"Name\":\"DocumentId\",\"Type\":\"IntegralNumber\",\"Key\":true,\"Required\":true,\"Navigation\":false,\"MaxLength\":null,\"List\":false},{\"Name\":\"Name\",\"Type\":\"TextPhrase\",\"Key\":false,\"Required\":true,\"Navigation\":false,\"MaxLength\":50,\"List\":false},{\"Name\":\"Type\",\"Type\":\"TextPhrase\",\"Key\":false,\"Required\":true,\"Navigation\":false,\"MaxLength\":1000,\"List\":false},{\"Name\":\"ProcessId\",\"Type\":\"IntegralNumber\",\"Key\":false,\"Required\":true,\"Navigation\":false,\"MaxLength\":null,\"List\":false},{\"Name\":\"Process\",\"Type\":\"Process\",\"Key\":false,\"Required\":false,\"Navigation\":true,\"MaxLength\":null,\"List\":false}]},{\"Name\":\"Office\",\"Properties\":[{\"Name\":\"OfficeId\",\"Type\":\"IntegralNumber\",\"Key\":true,\"Required\":true,\"Navigation\":false,\"MaxLength\":null,\"List\":false},{\"Name\":\"Name\",\"Type\":\"TextPhrase\",\"Key\":false,\"Required\":true,\"Navigation\":false,\"MaxLength\":50,\"List\":false},{\"Name\":\"Meetings\",\"Type\":\"Meeting\",\"Key\":false,\"Required\":false,\"Navigation\":true,\"MaxLength\":null,\"List\":true}]},{\"Name\":\"Comment\",\"Properties\":[{\"Name\":\"CommentId\",\"Type\":\"IntegralNumber\",\"Key\":true,\"Required\":true,\"Navigation\":false,\"MaxLength\":null,\"List\":false},{\"Name\":\"Content\",\"Type\":\"TextPhrase\",\"Key\":false,\"Required\":true,\"Navigation\":false,\"MaxLength\":null,\"List\":false},{\"Name\":\"ProcessId\",\"Type\":\"IntegralNumber\",\"Key\":false,\"Required\":true,\"Navigation\":false,\"MaxLength\":null,\"List\":false},{\"Name\":\"UserId\",\"Type\":\"IntegralNumber\",\"Key\":false,\"Required\":false,\"Navigation\":false,\"MaxLength\":null,\"List\":false},{\"Name\":\"CreationTime\",\"Type\":\"DateAndTime\",\"Key\":false,\"Required\":true,\"Navigation\":false,\"MaxLength\":null,\"List\":false},{\"Name\":\"Process\",\"Type\":\"Process\",\"Key\":false,\"Required\":false,\"Navigation\":true,\"MaxLength\":null,\"List\":false},{\"Name\":\"User\",\"Type\":\"User\",\"Key\":false,\"Required\":false,\"Navigation\":true,\"MaxLength\":null,\"List\":false}]},{\"Name\":\"User\",\"Properties\":[{\"Name\":\"UserId\",\"Type\":\"IntegralNumber\",\"Key\":true,\"Required\":true,\"Navigation\":false,\"MaxLength\":null,\"List\":false},{\"Name\":\"Email\",\"Type\":\"TextPhrase\",\"Key\":false,\"Required\":true,\"Navigation\":false,\"MaxLength\":100,\"List\":false},{\"Name\":\"EmailConfirmed\",\"Type\":\"Binary\",\"Key\":false,\"Required\":true,\"Navigation\":false,\"MaxLength\":null,\"List\":false},{\"Name\":\"PasswordHash\",\"Type\":\"TextPhrase\",\"Key\":false,\"Required\":true,\"Navigation\":false,\"MaxLength\":100,\"List\":false},{\"Name\":\"FirstName\",\"Type\":\"TextPhrase\",\"Key\":false,\"Required\":true,\"Navigation\":false,\"MaxLength\":50,\"List\":false},{\"Name\":\"LastName\",\"Type\":\"TextPhrase\",\"Key\":false,\"Required\":true,\"Navigation\":false,\"MaxLength\":50,\"List\":false},{\"Name\":\"FullName\",\"Type\":\"TextPhrase\",\"Key\":false,\"Required\":true,\"Navigation\":false,\"MaxLength\":101,\"List\":false},{\"Name\":\"Roles\",\"Type\":\"Role\",\"Key\":false,\"Required\":false,\"Navigation\":true,\"MaxLength\":null,\"List\":true},{\"Name\":\"Comments\",\"Type\":\"Comment\",\"Key\":false,\"Required\":false,\"Navigation\":true,\"MaxLength\":null,\"List\":true},{\"Name\":\"Processes\",\"Type\":\"Process\",\"Key\":false,\"Required\":false,\"Navigation\":true,\"MaxLength\":null,\"List\":true}]},{\"Name\":\"Role\",\"Properties\":[{\"Name\":\"RoleId\",\"Type\":\"IntegralNumber\",\"Key\":true,\"Required\":true,\"Navigation\":false,\"MaxLength\":null,\"List\":false},{\"Name\":\"Name\",\"Type\":\"TextPhrase\",\"Key\":false,\"Required\":true,\"Navigation\":false,\"MaxLength\":50,\"List\":false},{\"Name\":\"Users\",\"Type\":\"User\",\"Key\":false,\"Required\":false,\"Navigation\":true,\"MaxLength\":null,\"List\":true}]}]",
                            IdentityModuleDefinition = "{}",
                            IsTemplate = true,
                            Name = "HrApp_Template"
                        });
                });

            modelBuilder.Entity("Lowque.DataAccess.Entities.FlowDefinition", b =>
                {
                    b.Property<int>("FlowDefinitionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApplicationDefinitionId")
                        .HasColumnType("int");

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("UseResourceIdentifier")
                        .HasColumnType("bit");

                    b.HasKey("FlowDefinitionId");

                    b.HasIndex("ApplicationDefinitionId");

                    b.ToTable("FlowDefinitions");
                });

            modelBuilder.Entity("Lowque.DataAccess.Entities.Identity.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("Lowque.DataAccess.Entities.Identity.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "admin@lowque.pl",
                            EmailConfirmed = true,
                            PasswordHash = "AQAAAAEAACcQAAAAEHODCl8npca0JLvVFumIsB+TyOqbvoexBZ9YsEqtOyA7Dpy3mOa9OmPf0odb1NClyQ=="
                        });
                });

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.Property<int>("RolesRoleId")
                        .HasColumnType("int");

                    b.Property<int>("UsersUserId")
                        .HasColumnType("int");

                    b.HasKey("RolesRoleId", "UsersUserId");

                    b.HasIndex("UsersUserId");

                    b.ToTable("RoleUser");
                });

            modelBuilder.Entity("Lowque.DataAccess.Entities.FlowDefinition", b =>
                {
                    b.HasOne("Lowque.DataAccess.Entities.ApplicationDefinition", "ApplicationDefinition")
                        .WithMany("BusinessLogicModuleDefinition")
                        .HasForeignKey("ApplicationDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationDefinition");
                });

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.HasOne("Lowque.DataAccess.Entities.Identity.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lowque.DataAccess.Entities.Identity.User", null)
                        .WithMany()
                        .HasForeignKey("UsersUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Lowque.DataAccess.Entities.ApplicationDefinition", b =>
                {
                    b.Navigation("BusinessLogicModuleDefinition");
                });
#pragma warning restore 612, 618
        }
    }
}
